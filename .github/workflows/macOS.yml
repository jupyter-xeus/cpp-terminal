---
name: macOS

on:
  push:
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  macos-11:
    name: macos-11 xcode-${{ matrix.xcode }} (c++${{ matrix.standard }})
    runs-on: macos-11
    strategy:
      fail-fast: false
      matrix:
        xcode: [ '11.7', '12.4', '12.5.1', '13.0' ]
        standard: [ 11, 14, 17, 20 ]
    env:
      DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer

    steps:
      - uses: ammaraskar/gcc-problem-matcher@master
      - name: üì• Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: ‚¨áÔ∏è Setup CMake
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: ^3
          ninjaVersion: ^1.11.1
      - name: üìÇ Load .env file
        if: hashFiles('.github/workflows/.env') != ''
        uses: xom9ikk/dotenv@v2
        with:
          path: .github/workflows
      - name: üîß Configure
        run: cmake -S ${{ env.CMAKE_SOURCE_PREFIX }} -B ${{ env.CMAKE_BINARY_PREFIX }} -D CMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} -D CMAKE_CXX_STANDARD=${{ matrix.standard }} -D CMAKE_INSTALL_PREFIX=${{ env.CMAKE_INSTALL_PREFIX }} -D CPPTERMINAL_ENABLE_DOCS=OFF
      - name: ‚öôÔ∏è Build
        run: cmake --build ${{ env.CMAKE_BINARY_PREFIX }} --config ${{ env.CMAKE_BUILD_TYPE }} --parallel ${{ env.CMAKE_NUMBER_JOBS }}
      - name: üß™ Test
        run: ctest --test-dir ${{ env.CMAKE_BINARY_PREFIX }} -C ${{ env.CMAKE_BUILD_TYPE }} --output-on-failure
      - name: üéâ Install
        run: cmake --install ${{ env.CMAKE_BINARY_PREFIX }} --prefix ${{ env.CMAKE_INSTALL_PREFIX }} --config ${{ env.CMAKE_BUILD_TYPE }}

  macos-12:
    runs-on: macos-12
    name: macos-12 xcode-${{ matrix.xcode }} (c++${{ matrix.standard }})
    strategy:
      fail-fast: false
      matrix:
        xcode: [ '13.1', '13.2.1', '13.3.1', '13.4.1' ]
        standard: [ 11, 14, 17, 20 ]
    env:
      DEVELOPER_DIR: /Applications/Xcode_${{ matrix.xcode }}.app/Contents/Developer

    steps:
      - uses: ammaraskar/gcc-problem-matcher@master
      - name: üì• Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: ‚¨áÔ∏è Setup CMake
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: ^3
          ninjaVersion: ^1.11.1
      - name: üìÇ Load .env file
        if: hashFiles('.github/workflows/.env') != ''
        uses: xom9ikk/dotenv@v2
        with:
          path: .github/workflows
      - name: üîß Configure
        run: cmake -S ${{ env.CMAKE_SOURCE_PREFIX }} -B ${{ env.CMAKE_BINARY_PREFIX }} -D CMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} -D CMAKE_CXX_STANDARD=${{ matrix.standard }} -D CMAKE_INSTALL_PREFIX=${{ env.CMAKE_INSTALL_PREFIX }} -D CPPTERMINAL_ENABLE_DOCS=OFF
      - name: ‚öôÔ∏è Build
        run: cmake --build ${{ env.CMAKE_BINARY_PREFIX }} --config ${{ env.CMAKE_BUILD_TYPE }} --parallel ${{ env.CMAKE_NUMBER_JOBS }}
      - name: üß™ Test
        run: ctest --test-dir ${{ env.CMAKE_BINARY_PREFIX }} -C ${{ env.CMAKE_BUILD_TYPE }} --output-on-failure
      - name: üéâ Install
        run: cmake --install ${{ env.CMAKE_BINARY_PREFIX }} --prefix ${{ env.CMAKE_INSTALL_PREFIX }} --config ${{ env.CMAKE_BUILD_TYPE }}

  gcc:
    runs-on: macos-11
    name: macos-11 gcc-${{ matrix.version }} (c++${{ matrix.standard }})
    strategy:
      fail-fast: false
      matrix:
        version: [ 10, 11, 12 ]
        standard: [ 11, 14, 17, 20 ]

    steps:
      - uses: ammaraskar/gcc-problem-matcher@master
      - name: üì• Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: ‚¨áÔ∏è Setup CMake
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: ^3
          ninjaVersion: ^1.11.1
      - name: üìÇ Load .env file
        if: hashFiles('.github/workflows/.env') != ''
        uses: xom9ikk/dotenv@v2
        with:
          path: .github/workflows
      - name: üîß Configure
        env:
          CC: gcc-${{matrix.version}}
          CXX: g++-${{matrix.version}}
        run: cmake -S ${{ env.CMAKE_SOURCE_PREFIX }} -B ${{ env.CMAKE_BINARY_PREFIX }} -D CMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} -D CMAKE_CXX_STANDARD=${{ matrix.standard }} -D CMAKE_INSTALL_PREFIX=${{ env.CMAKE_INSTALL_PREFIX }} -D CPPTERMINAL_ENABLE_DOCS=OFF
      - name: ‚öôÔ∏è Build
        run: cmake --build ${{ env.CMAKE_BINARY_PREFIX }} --config ${{ env.CMAKE_BUILD_TYPE }} --parallel ${{ env.CMAKE_NUMBER_JOBS }}
      - name: üß™ Test
        run: ctest --test-dir ${{ env.CMAKE_BINARY_PREFIX }} -C ${{ env.CMAKE_BUILD_TYPE }} --output-on-failure
      - name: üéâ Install
        run: cmake --install ${{ env.CMAKE_BINARY_PREFIX }} --prefix ${{ env.CMAKE_INSTALL_PREFIX }} --config ${{ env.CMAKE_BUILD_TYPE }}
